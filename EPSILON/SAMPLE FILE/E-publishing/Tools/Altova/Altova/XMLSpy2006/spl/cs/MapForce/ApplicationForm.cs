//
// [=$application.Name]Form.cs
//
// This file was generated by [=$Host].
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the [=$HostShort] Documentation for further details.
// [=$HostURL]
//

using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;

namespace [=$application.Name]
{
	/// <summary>
	/// Summary description for [=$application.Name]Form.
	/// </summary>
	public class [=$application.Name]Form : System.Windows.Forms.Form, Altova.TraceTarget
	{
		// general
		private System.Windows.Forms.PictureBox pictureBoxLogo;
		private System.Windows.Forms.PictureBox pictureBox;
		private System.Windows.Forms.Label labelTitle;
		private System.Windows.Forms.LinkLabel linkLabelAltova;
		private System.Windows.Forms.Label labelDescription;
		private System.Windows.Forms.Panel panelStructures;
		private System.Windows.Forms.Button buttonStart;
		private System.Windows.Forms.ListBox listBoxOutput;
		// generated by Mapforce
[$SourceCount = 0
$TargetCount = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
]		private System.Windows.Forms.Label labelSource[=$SourceCount];
		private System.Windows.Forms.TextBox textBoxSource[=$SourceCount];
[			if $SourceLibrary.Kind = 1	' XML - Library
]		private System.Windows.Forms.Button buttonSource[=$SourceCount];
[			endif
			$SourceCount = $SourceCount + 1
		next
]		private System.Windows.Forms.Label labelTarget[=$TargetCount];
		private System.Windows.Forms.TextBox textBoxTarget[=$TargetCount];
[		if $AlgorithmGroup.TargetLibrary.Kind = 1
]		private System.Windows.Forms.Button buttonTarget[=$TargetCount];
[		endif
		$TargetCount = $TargetCount + 1
	next
next]
		/// <summary>
		/// Required designer variable.
		/// </summary>
		private System.ComponentModel.Container components = null;

		public [=$application.Name]Form()
		{
			//
			// Required for Windows Form Designer support
			//
			InitializeComponent();

[$SourceCount = 0
$TargetCount = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
]			textBoxSource[=$SourceCount].Text = [
			if $SourceLibrary.Kind = 1 ' XML Library
				]"[=$SourceLibrary.InputInstanceName]"[
			endif
			if $SourceLibrary.Kind = 2 ' Database Library
				]"[=$SourceLibrary.ADOConnectionString]"[
			endif
			if $SourceLibrary.Kind = 3 ' Text Library
				]"[=$SourceLibrary.InputFileName]"[
			endif];
[			$SourceCount = $SourceCount + 1
		next
]			textBoxTarget[=$TargetCount].Text = [
		if $AlgorithmGroup.TargetLibrary.Kind = 1	' XML Library
			]"[=$AlgorithmGroup.TargetLibrary.OutputInstanceName]"[	
		endif
		if $AlgorithmGroup.TargetLibrary.Kind = 2	' Database Library
			]"[=$AlgorithmGroup.TargetLibrary.ADOConnectionString]"[
		endif];
[		$TargetCount = $TargetCount + 1
	next
next]
		}

		\[STAThread\]
		public static void Main(string\[\] args) 
		{
			[=$application.Name]Form form = new [=$application.Name]Form();
			form.ShowDialog();
		}

		public void WriteTrace(string info)
		{
			listBoxOutput.Items.Add( info );
			listBoxOutput.Refresh();
		}

		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		protected override void Dispose( bool disposing )
		{
			if( disposing )
			{
				if(components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			System.Resources.ResourceManager resources = new System.Resources.ResourceManager(typeof([=$application.Name]Form));
			this.pictureBoxLogo = new System.Windows.Forms.PictureBox();
			this.pictureBox = new System.Windows.Forms.PictureBox();
			this.labelTitle = new System.Windows.Forms.Label();
			this.linkLabelAltova = new System.Windows.Forms.LinkLabel();
			this.labelDescription = new System.Windows.Forms.Label();
			this.panelStructures = new System.Windows.Forms.Panel();
			this.buttonStart = new System.Windows.Forms.Button();
			this.listBoxOutput = new System.Windows.Forms.ListBox();
			// Mapforce generated
[$SourceCount = 0
$TargetCount = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
]			this.labelSource[=$SourceCount] = new System.Windows.Forms.Label();
			this.textBoxSource[=$SourceCount] = new System.Windows.Forms.TextBox();
[			if $SourceLibrary.Kind = 1 ' XML Library
]			this.buttonSource[=$SourceCount] = new System.Windows.Forms.Button();
[			endif
			$SourceCount = $SourceCount + 1
		next
]			this.labelTarget[=$TargetCount] = new System.Windows.Forms.Label();
			this.textBoxTarget[=$TargetCount] = new System.Windows.Forms.TextBox();
[		if $AlgorithmGroup.TargetLibrary.Kind = 1	' XML Library
]			this.buttonTarget[=$TargetCount] = new System.Windows.Forms.Button();
[		endif
		$TargetCount = $TargetCount + 1
	next
next]
			this.panelStructures.SuspendLayout();
			this.SuspendLayout();
			// 
			// pictureBoxLogo
			// 
			this.pictureBoxLogo.BackColor = System.Drawing.Color.White;
			this.pictureBoxLogo.Image = ((System.Drawing.Image)(resources.GetObject("pictureBoxLogo.Image")));
			this.pictureBoxLogo.Location = new System.Drawing.Point(16, 16);
			this.pictureBoxLogo.Name = "pictureBoxLogo";
			this.pictureBoxLogo.Size = new System.Drawing.Size(80, 80);
			this.pictureBoxLogo.TabIndex = 0;
			this.pictureBoxLogo.TabStop = false;
			// 
			// pictureBox
			// 
			this.pictureBox.BackColor = System.Drawing.Color.White;
			this.pictureBox.Location = new System.Drawing.Point(8, 8);
			this.pictureBox.Name = "pictureBox";
			this.pictureBox.Size = new System.Drawing.Size(96, 392);
			this.pictureBox.TabIndex = 1;
			this.pictureBox.TabStop = false;
			// 
			// labelTitle
			// 
			this.labelTitle.Location = new System.Drawing.Point(112, 8);
			this.labelTitle.Name = "labelTitle";
			this.labelTitle.Size = new System.Drawing.Size(360, 16);
			this.labelTitle.TabIndex = 2;
			this.labelTitle.Text = "THIS APPLICATION WAS GENERATED BY [=$Host]";
			// 
			// linkLabelAltova
			// 
			this.linkLabelAltova.Location = new System.Drawing.Point(112, 32);
			this.linkLabelAltova.Name = "linkLabelAltova";
			this.linkLabelAltova.Size = new System.Drawing.Size(360, 23);
			this.linkLabelAltova.TabIndex = 3;
			this.linkLabelAltova.TabStop = true;
			this.linkLabelAltova.Text = "http://www.altova.com/mapforce";
			// 
			// labelDescription
			// 
			this.labelDescription.Location = new System.Drawing.Point(112, 72);
			this.labelDescription.Name = "labelDescription";
			this.labelDescription.Size = new System.Drawing.Size(360, 23);
			this.labelDescription.TabIndex = 4;
			this.labelDescription.Text = "Please check the input and output files and press the start button...";
			// 
			// panelStructures
			// 
			this.panelStructures.BorderStyle = System.Windows.Forms.BorderStyle.Fixed3D;
[$SourceCount = 0
$TargetCount = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
]			this.panelStructures.Controls.Add(this.labelSource[=$SourceCount]);
			this.panelStructures.Controls.Add(this.textBoxSource[=$SourceCount]);
[			if $SourceLibrary.Kind = 1 ' XML Library
]			this.panelStructures.Controls.Add(this.buttonSource[=$SourceCount]);
[			endif
			$SourceCount = $SourceCount + 1
		next
]			this.panelStructures.Controls.Add(this.labelTarget[=$TargetCount]);
			this.panelStructures.Controls.Add(this.textBoxTarget[=$TargetCount]);
[		if $AlgorithmGroup.TargetLibrary.Kind = 1	' XML Library
]			this.panelStructures.Controls.Add(this.buttonTarget[=$TargetCount]);
[		endif
		$TargetCount = $TargetCount + 1
	next
next
]			this.panelStructures.Location = new System.Drawing.Point(24, 104);
			this.panelStructures.Name = "panelStructures";
			this.panelStructures.Size = new System.Drawing.Size(448, 168);
			this.panelStructures.TabIndex = 5;
			// 
			// buttonStart
			// 
			this.buttonStart.Location = new System.Drawing.Point(24, 280);
			this.buttonStart.Name = "buttonStart";
			this.buttonStart.TabIndex = 6;
			this.buttonStart.Text = "Start";
			this.buttonStart.Click += new System.EventHandler(this.buttonStart_Click);
			// 
			// listBoxOutput
			// 
			this.listBoxOutput.Location = new System.Drawing.Point(24, 312);
			this.listBoxOutput.Name = "listBoxOutput";
			this.listBoxOutput.Size = new System.Drawing.Size(448, 82);
			this.listBoxOutput.TabIndex = 7;

			// Mapforce generated
[$SourceCount = 0
$TargetCount = 0
$YCoord = 8
$TabIndex = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
]			// 
			// labelSource[=$SourceCount]
			// 
			this.labelSource[=$SourceCount].Name = "labelSource[=$SourceCount]";
			this.labelSource[=$SourceCount].Location = new System.Drawing.Point(8, [=$YCoord]);
			this.labelSource[=$SourceCount].Size = new System.Drawing.Size(432, 16);
			this.labelSource[=$SourceCount].TabIndex = [=$TabIndex];
[			if $SourceLibrary.Kind = 1 ' XML Library
	]			this.labelSource[=$SourceCount].Text = "Source of [=$SourceLibrary.SchemaFilename]:";
[			endif
			if $SourceLibrary.Kind = 2	' Database Library
	]			this.labelSource[=$SourceCount].Text = "Connection-string of [=$SourceLibrary.DBName]:";
[			endif
			if $SourceLibrary.Kind = 3	' Text Library
	]			this.labelSource[=$SourceCount].Text = "Source of [=$SourceLibrary.Name]:";
[			endif
			$TabIndex = $TabIndex + 1
			$YCoord = $YCoord + 16
]			// 
			// textBoxSource[=$SourceCount]
			// 
			this.textBoxSource[=$SourceCount].Name = "textBoxSource[=$SourceCount]";
			this.textBoxSource[=$SourceCount].Location = new System.Drawing.Point(8, [=$YCoord]);
			this.textBoxSource[=$SourceCount].Size = new System.Drawing.Size(376, 20);
			this.textBoxSource[=$SourceCount].TabIndex = [=$TabIndex];
			this.textBoxSource[=$SourceCount].Text = "";
[			$TabIndex = $TabIndex + 1
			if $SourceLibrary.Kind = 1	' XML Library
]			// 
			// buttonSource[=$SourceCount]
			// 
			this.buttonSource[=$SourceCount].Name = "buttonSource[=$SourceCount]";
			this.buttonSource[=$SourceCount].Location = new System.Drawing.Point(392, [=$YCoord]);
			this.buttonSource[=$SourceCount].Size = new System.Drawing.Size(48, 23);
			this.buttonSource[=$SourceCount].TabIndex = [=$TabIndex];
			this.buttonSource[=$SourceCount].Text = "Open...";
			this.buttonSource[=$SourceCount].Click += new System.EventHandler(this.buttonSource[=$SourceCount]_Click);
[				$TabIndex = $TabIndex + 1
			endif
			$SourceCount = $SourceCount + 1
			$YCoord = $YCoord + 32
		next
]			// 
			// labelTarget[=$TargetCount]
			// 
			this.labelTarget[=$TargetCount].Name = "labelTarget[=$TargetCount]";
			this.labelTarget[=$TargetCount].Location = new System.Drawing.Point(8, [=$YCoord]);
			this.labelTarget[=$TargetCount].Size = new System.Drawing.Size(432, 16);
			this.labelTarget[=$TargetCount].TabIndex = [=$TabIndex];
			this.labelTarget[=$TargetCount].Text = "Target instance of _testtarget_a_an.xsd:";
[		if $AlgorithmGroup.TargetLibrary.Kind = 1 ' XML Library
	]			this.labelTarget[=$TargetCount].Text = "Target instance of [=$AlgorithmGroup.TargetLibrary.SchemaFilename]:";
[		endif
		if $AlgorithmGroup.TargetLibrary.Kind = 2	' Database Library
	]			this.labelTarget[=$TargetCount].Text = "Connection-string of [=$AlgorithmGroup.TargetLibrary.DBName]:";
[		endif
		$TabIndex = $TabIndex + 1
		$YCoord = $YCoord + 16
]			// 
			// textBoxTarget[=$TargetCount]
			// 
			this.textBoxTarget[=$TargetCount].Name = "textBoxTarget[=$TargetCount]";
			this.textBoxTarget[=$TargetCount].Location = new System.Drawing.Point(8, [=$YCoord]);
			this.textBoxTarget[=$TargetCount].Size = new System.Drawing.Size(376, 20);
			this.textBoxTarget[=$TargetCount].TabIndex = [=$TabIndex];
			this.textBoxTarget[=$TargetCount].Text = "";
[		$TabIndex = $TabIndex + 1
		if $AlgorithmGroup.TargetLibrary.Kind = 1 ' XML Library
]			// 
			// buttonTarget[=$TargetCount]
			// 
			this.buttonTarget[=$TargetCount].Name = "buttonTarget[=$TargetCount]";
			this.buttonTarget[=$TargetCount].Location = new System.Drawing.Point(392, 72);
			this.buttonTarget[=$TargetCount].Size = new System.Drawing.Size(48, 23);
			this.buttonTarget[=$TargetCount].TabIndex = [=$TabIndex];
			this.buttonTarget[=$TargetCount].Text = "Open...";
			this.buttonTarget[=$TargetCount].Click += new System.EventHandler(this.buttonTarget[=$TargetCount]_Click);
[			$TabIndex = $TabIndex + 1
		endif
		$TargetCount = $TargetCount + 1
		$YCoord = $YCoord + 32
	next
next
]			// 
			// [=$application.Name]Form
			// 
			this.AutoScaleBaseSize = new System.Drawing.Size(5, 13);
			this.ClientSize = new System.Drawing.Size(496, 406);
			this.Controls.Add(this.listBoxOutput);
			this.Controls.Add(this.buttonStart);
			this.Controls.Add(this.panelStructures);
			this.Controls.Add(this.labelDescription);
			this.Controls.Add(this.linkLabelAltova);
			this.Controls.Add(this.labelTitle);
			this.Controls.Add(this.pictureBoxLogo);
			this.Controls.Add(this.pictureBox);
			this.Name = "[=$application.Name]";
			this.Text = "[=$application.Name]";
			this.panelStructures.ResumeLayout(false);
			this.ResumeLayout(false);

		}
		#endregion

[$SourceCount = 0
$TargetCount = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
			if $SourceLibrary.Kind = 1 ' XML Library
]		private void buttonSource[=$SourceCount]_Click(object sender, System.EventArgs e)
		{
			OpenFileDialog	ofd = new OpenFileDialog();
			ofd.Filter = "XML-Files (*.xml)|*.xml|All files (*.*)|*.*";
			ofd.FilterIndex = 1;
			ofd.RestoreDirectory = true;
			ofd.AddExtension = true;

			if( ofd.ShowDialog() != DialogResult.OK )
				return ;

			textBoxSource[=$SourceCount].Text = ofd.FileName;
		}

[			endif
			$SourceCount = $SourceCount + 1
		next
		if $AlgorithmGroup.TargetLibrary.Kind = 1	' XML Library
]		private void buttonTarget[=$TargetCount]_Click(object sender, System.EventArgs e)
		{
			OpenFileDialog	ofd = new OpenFileDialog();
			ofd.AddExtension = true;
			ofd.Filter = "XML-Files (*.xml)|*.xml";
			ofd.FilterIndex = 1;
			ofd.RestoreDirectory = true;

			if( ofd.ShowDialog() != DialogResult.OK )
				return ;

			textBoxTarget[=$TargetCount].Text = ofd.FileName;
		}

[		endif
		$TargetCount = $TargetCount + 1
	next
next
]
		private void buttonStart_Click(object sender, System.EventArgs e)
		{
			WriteTrace("[=$application.Name] started...");

			try
			{
[$SourceCount = 0
$TargetCount = 0
foreach $Mapping in $application.Mappings
	foreach $AlgorithmGroup in $Mapping.AlgorithmGroups
		$AlgorithmGroupClass = $application.Name & $AlgorithmGroup.Name
		$Args = ""
]				[=$AlgorithmGroupClass] [=$AlgorithmGroupClass]Object = new [=$AlgorithmGroupClass]();
				[=$AlgorithmGroupClass]Object.RegisterTraceTarget( this );
				[=$AlgorithmGroupClass]Object.Run(
[		foreach $SourceLibrary in $AlgorithmGroup.SourceLibraryList
]					textBoxSource[=$SourceCount].Text,
[			$SourceCount = $SourceCount + 1
		next
]					textBoxTarget[=$TargetCount].Text
					);
[		$TargetCount = $TargetCount + 1
	next
next
]			}
			catch ( Exception err )
			{
				WriteTrace( "ERROR: " );
				WriteTrace( err.Message );
				WriteTrace( err.StackTrace );
			}

			WriteTrace("[=$application.Name] finished.");
		}
	}
}
