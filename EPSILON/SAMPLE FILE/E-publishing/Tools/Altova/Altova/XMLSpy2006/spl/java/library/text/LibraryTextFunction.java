/**
 * FunctionFactory.java
 *
 * This file was generated by [=$Host].
 *
 * YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
 * OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
 *
 * Refer to the [=$HostShort] Documentation for further details.
 * [=$HostURL]
 */

package [=$FullPackageName];

import com.altova.text.edifact.Function;
import com.altova.text.edifact.commands.*;
import com.altova.text.edifact.conditions.*;
import com.altova.text.ITextNode;

public class FunctionFactory {
[
foreach $function in $library.Functions
]
	static public Function createFunction[=$function.Name]() {
		Function f = new Function();
[	foreach $command in $function.Commands ' iterate the command container
		$CommandClassName = "Command" & $command.CommandName
		if $command.HasConditions ' check if there are conditions attached
]		{
			[=$CommandClassName] command = new [=$CommandClassName]([if $command.HasParameter]"[=$command.Parameter]"[endif][if $command.CommandName = "Enter"], ITextNode.[=$command.ClassName][endif]);
[			if $command.Operation = 1
]			command.getConditions().setOperation( ConditionList.AND );
[			endif ' command.Operation
			foreach $condition in $command.Conditions ' iterate the condition container
				$ConditionClassName = "Condition" & $condition.ConditionName ' create the condition class name
]			command.addCondition( new [=$ConditionClassName]([if $condition.HasParameter]"[=$condition.Parameter]"[endif][if $condition.Negate], true[endif]) );
[			next' condition
			if $command.HasOtherwise
				foreach $otherwise in $command.Otherwise ' iterate the otherwise command container
					$OtherwiseClassName = "Command" & $otherwise.CommandName ' create the command class name
]			command.addOtherwise( new [=$OtherwiseClassName]([if $otherwise.HasParameter]"[=$otherwise.Parameter]"[endif][if $otherwise.CommandName = "Enter"], ITextNode.[=$otherwise.ClassName][endif]) );
[				next 'otherwise
			endif ' command.HasOtherwise
]			f.addCommand( command );
		}
[		else ' command.HasConditions
]		f.addCommand( new [=$CommandClassName]([if $command.HasParameter]"[=$command.Parameter]"[endif][if $command.CommandName = "Enter"], ITextNode.[=$command.ClassName][endif]) );
[		endif ' command.HasConditions
	next ' command
]		return f;
	}

[
next 'function
]
};
